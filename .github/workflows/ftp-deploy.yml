name: 'âš™ ðŸš€ FTP Deploy'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  lint:
    name: 'ðŸ“ƒ Lint'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: 'ðŸ›  Use node ${{ matrix.node-version }}'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: 'ðŸ’¾ Cache/Restore npm'
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 'ðŸ“¦ Install Dependencies'
        run: npm ci
      - name: 'ðŸ“ƒ Lint'
        run: npm run lint

  test:
    name: 'âš™ Unit Test'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: 'ðŸ›  Use node ${{ matrix.node-version }}'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: 'ðŸ’¾ Cache/Restore npm'
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 'ðŸ“¦ Install Dependencies'
        run: npm ci
      - name: 'âš™ Unit Test'
        run: npm run test:unit

  build:
    name: 'ðŸ”¨ Build'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: 'ðŸ›  Use node ${{ matrix.node-version }}'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: 'ðŸ’¾ Cache/Restore npm'
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 'ðŸ“¦ Install Dependencies'
        run: npm ci
      - name: 'ðŸ”¨ Build'
        run: npm run build
      - name: 'â¬† Upload Dist'
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: './dist/'


  deploy:
    name: 'ðŸš€ FTP Deploy'
    needs: [ lint, test, build ]
    runs-on: ubuntu-latest
    steps:
      - name: 'â¬‡ Download Dist'
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: './dist/'
      - name: 'ðŸš€ FTP Deploy'
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ftp.over.red
          username: root@over.red
          password: ${{ secrets.ftp_password }}
          local-dir: './dist/'
          server-dir: '/cv.over.red/'

